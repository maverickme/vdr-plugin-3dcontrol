--- vdr-plugin-softhddevice-0.5.1.git.20121024.1813.orig/video.c
+++ vdr-plugin-softhddevice-0.5.1.git.20121024.1813/video.c
@@ -383,6 +383,8 @@ static int OsdDirtyHeight;		///< osd dir
 
 static int64_t VideoDeltaPTS;		///< FIXME: fix pts
 
+int Osd3DMode=0;
+
 //----------------------------------------------------------------------------
 //	Common Functions
 //----------------------------------------------------------------------------
@@ -7451,6 +7453,7 @@ static void VdpauMixOsd(void)
     VdpOutputSurfaceRenderBlendState blend_state;
     VdpRect source_rect;
     VdpRect output_rect;
+    VdpRect output_double_rect;
     VdpStatus status;
 
     //uint32_t start;
@@ -7498,11 +7501,27 @@ static void VdpauMixOsd(void)
 	output_rect.y1 = VideoWindowHeight;
     }
 
+    output_double_rect = output_rect;
+
+    switch (Osd3DMode) {
+         case 1:
+                output_rect.x1 = output_rect.x1 / 2;
+                output_double_rect.x0 = output_rect.x1;
+                break;
+         case 2:
+                output_rect.y1 = output_rect.y1 / 2;
+                output_double_rect.y0 = output_rect.y1;
+                break;
+        default:
+             break;
+    }
+
     //start = GetMsTicks();
 
     // FIXME: double buffered osd disabled
     VdpauOsdSurfaceIndex = 1;
 #ifdef USE_BITMAP
+
     status =
 	VdpauOutputSurfaceRenderBitmapSurface(VdpauSurfacesRb
 	[VdpauSurfaceIndex], &output_rect,
@@ -7524,6 +7543,20 @@ static void VdpauMixOsd(void)
 	Error(_("video/vdpau: can't render output surface: %s\n"),
 	    VdpauGetErrorString(status));
     }
+
+    if (Osd3DMode > 0) {
+       status =
+	   VdpauOutputSurfaceRenderOutputSurface(VdpauSurfacesRb
+	   [VdpauSurfaceIndex], &output_double_rect,
+	   VdpauOsdOutputSurface[!VdpauOsdSurfaceIndex], &source_rect, NULL,
+	   VideoTransparentOsd ? &blend_state : NULL,
+	   VDP_OUTPUT_SURFACE_RENDER_ROTATE_0);
+       if (status != VDP_STATUS_OK) {
+	   Error(_("video/vdpau: can't render output surface: %s\n"),
+	       VdpauGetErrorString(status));
+       }
+    }
+
 #endif
     //end = GetMsTicks();
     /*
@@ -8775,6 +8808,11 @@ void VideoOsdClear(void)
     VideoThreadUnlock();
 }
 
+void VideoSetOsd3DMode(int Mode)
+{
+   Osd3DMode=Mode;
+}
+
 ///
 ///	Draw an OSD ARGB image.
 ///
--- vdr-plugin-softhddevice-0.5.1.git.20121024.1813.orig/softhddevice_service.h
+++ vdr-plugin-softhddevice-0.5.1.git.20121024.1813/softhddevice_service.h
@@ -23,6 +23,7 @@
 #pragma once
 
 #define ATMO_GRAB_SERVICE	"SoftHDDevice-AtmoGrabService-v1.0"
+#define OSD_3DMODE_SERVICE	"SoftHDDevice-Osd3DModeService-v1.0"
 
 enum
 { GRAB_IMG_RGBA_FORMAT_B8G8R8A8 };
@@ -42,3 +43,8 @@ typedef struct
     int height;
     void *img;
 } SoftHDDevice_AtmoGrabService_v1_0_t;
+
+typedef struct
+{
+    int Mode;
+} SoftHDDevice_Osd3DModeService_v1_0_t;
--- vdr-plugin-softhddevice-0.5.1.git.20121024.1813.orig/softhddevice.cpp
+++ vdr-plugin-softhddevice-0.5.1.git.20121024.1813/softhddevice.cpp
@@ -2305,6 +2305,15 @@ bool cPluginSoftHdDevice::Service(const
 {
     //dsyslog("[softhddev]%s: id %s\n", __FUNCTION__, id);
 
+    if (strcmp(id, OSD_3DMODE_SERVICE) == 0) {
+       VideoSetOsd3DMode(0);
+       SoftHDDevice_Osd3DModeService_v1_0_t *r =
+           (SoftHDDevice_Osd3DModeService_v1_0_t *) data;
+       VideoSetOsd3DMode(r->Mode);
+       return true;
+    }
+
+
     if (strcmp(id, ATMO_GRAB_SERVICE) == 0) {
 	int width;
 	int height;
@@ -2393,6 +2402,9 @@ static const char *SVDRPHelpText[] = {
 	"    NOT_SUSPENDED    ==  0  (910)\n"
 	"    SUSPEND_NORMAL   ==  1  (911)\n"
 	"    SUSPEND_DETACHED ==  2  (912)\n",
+     "3DOF\n" "\040   3D OSD off.\n",
+     "3DTB\n" "\040   3D OSD Top and Bottom.\n",
+     "3DSB\n" "\040   3D OSD Side by Side.\n",
     NULL
 };
 
@@ -2512,6 +2524,19 @@ cString cPluginSoftHdDevice::SVDRPComman
 	DoMakePrimary = primary;
 	return "switching primary device requested";
     }
+    if (!strcasecmp(command, "3DOF")) {
+        VideoSetOsd3DMode(0);
+        return "3d off";
+    }
+    if (!strcasecmp(command, "3DSB")) {
+        VideoSetOsd3DMode(1);
+        return "3d sbs";
+    }
+    if (!strcasecmp(command, "3DTB")) {
+        VideoSetOsd3DMode(2);
+        return "3d tb";
+    }
+
     return NULL;
 }
 
--- vdr-plugin-softhddevice-0.5.1.git.20121024.1813.orig/video.h
+++ vdr-plugin-softhddevice-0.5.1.git.20121024.1813/video.h
@@ -160,6 +160,9 @@ extern void VideoSetAutoCrop(int, int, i
     /// Clear OSD.
 extern void VideoOsdClear(void);
 
+    /// Set Osd 3D Mode
+extern void VideoSetOsd3DMode(int);
+
     /// Draw an OSD ARGB image.
 extern void VideoOsdDrawARGB(int, int, int, int, const uint8_t *);
 
